% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ombc_lcwm.R
\name{ombc_lcwm}
\alias{ombc_lcwm}
\title{Sequentially identify outliers while fitting a linear cluster-weighted model.}
\usage{
ombc_lcwm(
  xy,
  x,
  y_formula,
  comp_num,
  max_out,
  gross_outs = rep(FALSE, nrow(x)),
  init_scheme = c("update", "reinit", "reuse"),
  mnames = "VVV",
  nmax = 1000,
  atol = 1e-08,
  init_z = NULL,
  init_method = c("hc", "kmpp"),
  init_scaling = TRUE,
  kmpp_seed = 123,
  print_interval = Inf,
  dd_weight = 0.5,
  dens_power = 0.5
)
}
\arguments{
\item{xy}{\code{data.frame} containing covariates and response.}

\item{x}{Covariate data only.}

\item{y_formula}{Regression formula.}

\item{comp_num}{Number of components.}

\item{max_out}{Maximum number of outliers.}

\item{gross_outs}{Logical vector identifying gross outliers.}

\item{init_scheme}{Which initialisation scheme to use.}

\item{mnames}{Model names for mixture::gpcm.}

\item{nmax}{Maximum number of iterations for mixture::gpcm.}

\item{atol}{EM convergence tolerance threshold for mixture::gpcm.}

\item{init_z}{Initial component assignment probability matrix.}

\item{init_method}{Method used to initialise each mixture model.}

\item{init_scaling}{Logical value controlling whether the data should be
scaled for initialisation.}

\item{kmpp_seed}{Optional seed for k-means++ initialisation.}

\item{print_interval}{How frequently the iteration count is printed.}

\item{dd_weight}{.}

\item{dens_power}{.}
}
\value{
List of
\itemize{
\item labels
\item outlier_bool
\item outlier_num
\item outlier_rank
\item gross_outs
\item lcwm = lcwm
\item loglike
\item removal_dens
\item distrib_diff_vec
\item distrib_diff_mat
\item call
\item version
\item conv_status
}
}
\description{
Iterative Detection & Identification of Outliers for a Linear
Cluster-Weighted Model
}
\examples{

gross_lcwm_k3n1000o10 <- find_gross(lcwm_k3n1000o10, 20)

ombc_lcwm_k3n1000o10 <- ombc_lcwm(
  xy = lcwm_k3n1000o10[, c("X1", "Y")],
  x = lcwm_k3n1000o10$X1,
  y_formula = Y ~ X1,
  comp_num = 3,
  max_out = 20,
  mnames = "V",
  gross_outs = gross_lcwm_k3n1000o10$gross_bool
)

}
